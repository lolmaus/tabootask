name: Test PR
on:
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Get Playwright version
        id: pw-version
        run: |
          version=$(node -e "const pkg = require('./packages/test-e2e/package.json'); console.log(pkg.devDependencies?.['@playwright/test'] || pkg.dependencies?.['@playwright/test']);")
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-node20-${{ steps.pw-version.outputs.version }}

      - name: Install Playwright browsers and dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm --filter @tabootask/test-e2e exec playwright install --with-deps

      - name: Start local Convex backend
        run: |
          pnpm run watch:test --filter @tabootask/backend &
          BACKEND_PID=$!
          pnpx wait-on http://localhost:3210

      - name: Start frontend in production mode
        run: |
          pnpm run serve:prod &
          FRONTEND_PID=$!
          pnpx wait-on http://localhost:3000

      - name: Run E2E tests
        run: pnpm run test:e2e

      - name: Cleanup processes
        if: always()
        run: |
          kill $BACKEND_PID || true
          kill $FRONTEND_PID || true

      - name: Deploy Playwright Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: packages/test-e2e/playwright-report/
          destination_dir: pr-${{ github.event.pull_request.number }}

      - name: Add PR comment with report link
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const reportUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/pr-${context.issue.number}/index.html`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Playwright E2E Test Report: ${reportUrl}`
            });